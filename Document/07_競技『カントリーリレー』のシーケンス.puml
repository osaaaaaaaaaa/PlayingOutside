@startuml
'https://plantuml.com/sequence-diagram


participant クライアントA
participant クライアントB
participant クライアントC
participant サーバー

autonumber
title 競技『カントリーリレー』のシーケンス図

rnote over クライアントA,クライアントC:現在のシーン：GameScene1
rnote over クライアントA,サーバー:現在の競技：『カントリーリレー』

loop 全てのエリアを終えた場合
クライアントA -> サーバー:エリアのクリア通知
rnote over サーバー:そのエリアの\nクライアントAの順位を保存
rnote over サーバー:全員が現在のエリアを\nクリアしたかチェック
rnote over サーバー:短いカウントダウンを開始\n(終了で全員を次のエリアへ強制移動)
クライアントB -> サーバー:エリアのクリア通知
rnote over サーバー:そのエリアの\nクライアントBの順位を保存
rnote over サーバー:全員が現在のエリアを\nクリアしたかチェック
クライアントC -> サーバー:エリアのクリア通知
rnote over サーバー:そのエリアの\nクライアントCの順位を保存
rnote over サーバー:全員が現在のエリアを\nクリアしたかチェック
rnote over サーバー:全てのエリアをクリアしたかチェック

alt 全てのエリアをクリアした場合
rnote over サーバー:リザルト(途中経過)情報をまとめる
クライアントA <- サーバー:競技終了通知+リザルト(途中経過)情報を送信
クライアントB <- サーバー:競技終了通知+リザルト(途中経過)情報を送信
クライアントC <- サーバー:競技終了通知+リザルト(途中経過)情報を送信
end

alt まだ全てのエリアをクリアしていない場合
クライアントA <-- サーバー:全員クリアしたことを通知(本人のスポーン時間,次のエリア)
クライアントB <-- サーバー:全員クリアしたことを通知
クライアントC <-- サーバー:全員クリアしたことを通知
rnote over クライアントA,クライアントC: 次のエリアに移動
クライアントA -> サーバー:準備完了通知
rnote over サーバー:全員が準備完了したかチェック
クライアントB -> サーバー:準備完了通知
rnote over サーバー:全員が準備完了したかチェック
クライアントC -> サーバー:準備完了通知
rnote over サーバー:全員が準備完了したかチェック
クライアントA <-- サーバー:ゲーム再開通知\n+ (前回の順位を基準にしたスポーン時間,次のエリアのID)を送信
rnote over サーバー:全員が準備完了したかチェック
クライアントB <-- サーバー:ゲーム再開通知\n+ (前回の順位を基準にしたスポーン時間,次のエリアのID)を送信
rnote over サーバー:全員が準備完了したかチェック
クライアントC <-- サーバー:ゲーム再開通知\n+ (前回の順位を基準にしたスポーン時間,次のエリアのID)を送信
rnote over クライアントA,クライアントC: 各自でスポーン時間が経過したら動けるようになる
end
end

rnote over クライアントA,クライアントC:現在のシーン：MidResultsScene
rnote over クライアントA,クライアントC:途中経過発表

@enduml クライアントA